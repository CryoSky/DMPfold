language: bash

script:
  - sudo apt-get install -y hhsuite # Install HH-suite
  - git clone --recursive https://github.com/soedinglab/CCMpred.git # Install CCMpred
  - cd CCMpred
  - cmake .
  - make
  - cd ..
  - sudo apt-get install -y freecontact # Install FreeContact
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh # Install Conda
  - bash miniconda.sh -b -p ./miniconda
  - export PATH="~/build/psipred/DMPfold/miniconda/bin:$PATH"
  - conda config --set always_yes yes --set changeps1 no
  - yes | pip install numpy scipy # Install NumPy and SciPy
  - conda install modeller -c salilab # Install MODELLER
  - sed -i "s/XXXX/$MODELLERKEY/g" miniconda/lib/modeller-*/modlib/modeller/config.py
  - conda install pytorch-cpu torchvision-cpu -c pytorch # Install Pytorch
  - python -c "import torch"
  - curl $DEPENDENCYURL/cns_solve_1.3.tgz -o cns_solve_1.3.tgz # Install CNS; this is a version with fixes outlined in the README
  - tar -zxvf cns_solve_1.3.tgz
  - cd cnsfiles # Download and patch CNS scripts
  - sh installscripts.sh
  - cd ..
  - sudo apt-get install -y csh # Install csh shell
  - sudo apt-get install -y libgfortran3 # Install libgfortran3
  - curl $DEPENDENCYURL/ncbi_legacy.tgz -o ncbi_legacy.tgz # Install legacy NCBI BLAST software
  - tar -zxvf ncbi_legacy.tgz
  - cd src # Test compilation of source files
  - make
  - ls
  - cd ..
  - sed -i "s/set dmpfolddir = ~\/DMPfold/set dmpfolddir = ~\/build\/psipred\/DMPfold/" seq2maps.csh # Modify installed locations
  - sed -i "s/set ccmpreddir = ~\/CCMpred\/bin/set ccmpreddir = .\/CCMpred\/bin/" seq2maps.csh
  - sed -i "s/set freecontactcmd = ~\/freecontact\/bin\/freecontact/set freecontactcmd = freecontact/" seq2maps.csh
  - sed -i "s/set ncbidir = ~\/blast\/bin/set ncbidir = ~\/build\/psipred\/DMPfold\/ncbi_legacy/" seq2maps.csh
  - sed -i "s/set dmpfolddir = ~\/DMPfold/set dmpfolddir = ~\/build\/psipred\/DMPfold/" aln2maps.csh
  - sed -i "s/set ccmpreddir = ~\/CCMpred\/bin/set ccmpreddir = .\/CCMpred\/bin/" aln2maps.csh
  - sed -i "s/set freecontactcmd = ~\/freecontact\/bin\/freecontact/set freecontactcmd = freecontact/" aln2maps.csh
  - sed -i "s/set ncbidir = ~\/blast\/bin/set ncbidir = ~\/build\/psipred\/DMPfold\/ncbi_legacy/" aln2maps.csh
  - sed -i "s/set dmpfolddir = ~\/dmpfold/set dmpfolddir = ~\/build\/psipred\/DMPfold/" bin/runpsipredandsolvwithdb
  - sed -i "s/set ncbidir = ~\/blast\/bin/set ncbidir = ~\/build\/psipred\/DMPfold\/ncbi_legacy/" bin/runpsipredandsolvwithdb
  - sed -i "s/dmpfolddir=~\/DMPfold/dmpfolddir=~\/build\/psipred\/DMPfold/" run_dmpfold.sh
  - sed -i "s/source ~\/cns_solve_1.3\/.cns_solve_env.sh/source ~\/build\/psipred\/DMPfold\/cns_solve_1.3\/cns_solve_env_sh/" run_dmpfold.sh
  - sed -i "s/\$HHBIN\/hhblits/#\$HHBIN\/hhblits/" seq2maps.csh # For autobuild, eliminate HHblits step and use existing a3m file
  - cp example/PF10963.a3m .
  - ulimit -s unlimited
  - csh seq2maps.csh example/PF10963.fasta # Generate map and 21c files from single sequence
  - du -h PF10963.* # Check files generated okay
  - bash run_dmpfold.sh example/PF10963.fasta PF10963.21c PF10963.map ./PF10963_fasta 3 5 # Run DMPfold
  - head PF10963_fasta/final_1.pdb
  - curl https://zhanglab.ccmb.med.umich.edu/TM-align/TMalign.gz | gunzip > TMalign # Download TMalign
  - chmod +x TMalign
  - ./TMalign PF10963_fasta/final_1.pdb example/3FGX.pdb # Check model accuracy
  - tma=$(./TMalign PF10963_fasta/final_1.pdb example/3FGX.pdb | grep "if normalized by length of Chain_1" | sed -E 's/^.{10}//' | sed -E 's/.{37}$//')
  - if (( $(echo "$tma >= 0.5" | bc -l) )); then echo "Correct fold, TMalign score $tma"; else echo "Incorrect fold, TMalign score $tma"; exit 1; fi # Throw an error if the model is the wrong fold
  - rm PF10963.*
  - mkdir temp1 temp2 # For the run from an alignment we also check that it works when run in another directory
  - cd temp1
  - csh ../aln2maps.csh ../example/PF10963.aln # Generate map and 21c files from alignment
  - du -h PF10963.* # Check files generated okay
  - cd ../temp2
  - bash ../run_dmpfold.sh ../example/PF10963.fasta ../temp1/PF10963.21c ../temp1/PF10963.map ../PF10963_aln 3 5 # Run DMPfold on new inputs
  - cd ..
  - head PF10963_aln/final_1.pdb
  - ./TMalign PF10963_aln/final_1.pdb example/3FGX.pdb # Check model accuracy
  - tma=$(./TMalign PF10963_aln/final_1.pdb example/3FGX.pdb | grep "if normalized by length of Chain_1" | sed -E 's/^.{10}//' | sed -E 's/.{37}$//')
  - if (( $(echo "$tma >= 0.5" | bc -l) )); then echo "Correct fold, TMalign score $tma"; else echo "Incorrect fold, TMalign score $tma"; exit 1; fi # Throw an error if the model is the wrong fold
